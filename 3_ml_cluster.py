# -*- coding: utf-8 -*-
"""3_ml_cluster.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xBbg08T2PPTgOV6Wn3_nHSp9HMCuaFdA
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('exercise3.csv')
df.head()

df.shape

df.describe()

df.info()

sns.countplot(x=df['Gender'])

sns.barplot(x= 'Gender',  y = 'Annual Income (k$)', data = df)

sns.barplot(x= 'Gender',  y = 'Spending Score (1-100)', data = df)

sns.scatterplot(x= 'Age',  y = 'Annual Income (k$)', data = df)

sns.scatterplot(x= 'Age',  y = 'Spending Score (1-100)', data = df)

sns.scatterplot(x= 'Annual Income (k$)',  y = 'Spending Score (1-100)', data = df)

from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans
from sklearn.metrics import silhouette_samples, silhouette_score

X= df.iloc[:,3:]
sc = StandardScaler()
X = sc.fit_transform(X)

model = KMeans(n_clusters= 2, random_state=42)
y_preds = model.fit_predict(X)
df['cluster'] = y_preds

print('실루엣 점수: {0:.4f}'.format(silhouette_score(X, y_preds)))

sns.scatterplot(x = 'Annual Income (k$)', y = 'Spending Score (1-100)', data = df, hue = 'cluster')

silhouette_avg = []
for k in range(10):
    model = KMeans(n_clusters= k+2, random_state=42)
    y_preds = model.fit_predict(X)
    score = silhouette_score(X, y_preds)
    silhouette_avg.append(score)
    print("군집개수: {0}개, 평균 실루엣 점수: {1:.4f}".format(k+2, score))

plt.plot(range(2,12), silhouette_avg, 'bo--')
plt.xlabel('# of clusters')
plt.ylabel('silhouette_avg')
plt.show()

model = KMeans(n_clusters= 5, random_state=42)
y_preds = model.fit_predict(X)
df['cluster'] = y_preds

sns.scatterplot(x = 'Annual Income (k$)', y = 'Spending Score (1-100)', data = df, hue = 'cluster', palette="deep")

sns.barplot(x = 'cluster', y = 'Spending Score (1-100)', data = df)

sns.barplot(x = 'cluster', y = 'Annual Income (k$)', data = df)

sns.countplot(x='cluster', data = df, hue = 'Gender')

sns.swarmplot(x = 'cluster', y='Age', data = df)